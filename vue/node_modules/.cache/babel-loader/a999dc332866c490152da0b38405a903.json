{"remainingRequest":"D:\\daima\\java\\springboot\\vue\\node_modules\\thread-loader\\dist\\cjs.js!D:\\daima\\java\\springboot\\vue\\node_modules\\babel-loader\\lib\\index.js!D:\\daima\\java\\springboot\\vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!D:\\daima\\java\\springboot\\vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\daima\\java\\springboot\\vue\\src\\views\\Dashbord.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\daima\\java\\springboot\\vue\\src\\views\\Dashbord.vue","mtime":1681542502247},{"path":"D:\\daima\\java\\springboot\\vue\\babel.config.js","mtime":1642682271570},{"path":"D:\\daima\\java\\springboot\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1670775870315},{"path":"D:\\daima\\java\\springboot\\vue\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1670775874045},{"path":"D:\\daima\\java\\springboot\\vue\\node_modules\\babel-loader\\lib\\index.js","mtime":1670775870320},{"path":"D:\\daima\\java\\springboot\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1670775870315},{"path":"D:\\daima\\java\\springboot\\vue\\node_modules\\vue-loader\\lib\\index.js","mtime":1670775868363}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuanNvbi5zdHJpbmdpZnkuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5mb3ItZWFjaC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmZ1bmN0aW9uLm5hbWUuanMiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgKiBhcyBlY2hhcnRzIGZyb20gJ2VjaGFydHMnOwppbXBvcnQgcmVxdWVzdCBmcm9tICJAL3V0aWxzL3JlcXVlc3QiOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogIkhvbWUiLAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBjb3VudExpc3Q6IFtdLAogICAgICBsaW5lOiBbXSwKICAgICAgcGlwZTogW10KICAgIH07CiAgfSwKICBjcmVhdGVkOiBmdW5jdGlvbiBjcmVhdGVkKCkgewogICAgdGhpcy5sb2FkKCk7CiAgfSwKICBtZXRob2RzOiB7CiAgICBsb2FkOiBmdW5jdGlvbiBsb2FkKCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgcmVxdWVzdC5nZXQoIi9lY2hhcnRzL2NvdW50IikudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgaWYgKHJlcy5jb2RlID09IDIwMCkgewogICAgICAgICAgX3RoaXMuY291bnRMaXN0ID0gcmVzLmRhdGE7IC8vICBjb25zb2xlLmxvZyhyZXMuZGF0YVsi6aKY5bqT5pWw6YePIl0pCiAgICAgICAgfQogICAgICB9KTsKICAgIH0sCiAgICBkcmF3TGluZTogZnVuY3Rpb24gZHJhd0xpbmUoKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgcmVxdWVzdC5nZXQoIi9lY2hhcnRzL2xpbmUiKS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICBpZiAocmVzLmNvZGUgPT09ICcyMDAnKSB7CiAgICAgICAgICBfdGhpczIubGluZSA9IEpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkocmVzLmRhdGEpKTsKICAgICAgICAgIHZhciB4ID0gW107CgogICAgICAgICAgX3RoaXMyLmxpbmUueC5mb3JFYWNoKGZ1bmN0aW9uICh2KSB7CiAgICAgICAgICAgIHgucHVzaCh2KTsKICAgICAgICAgIH0pOyAvLyBjb25zb2xlLmxvZyh4KQoKCiAgICAgICAgICB2YXIgeSA9IFtdOwoKICAgICAgICAgIF90aGlzMi5saW5lLnkuZm9yRWFjaChmdW5jdGlvbiAodikgewogICAgICAgICAgICB5LnB1c2godik7CiAgICAgICAgICB9KTsgLy9jb25zb2xlLmxvZyh5KQogICAgICAgICAgLy8g5Z+65LqO5YeG5aSH5aW955qEZG9t77yM5Yid5aeL5YyWZWNoYXJ0c+WunuS+iyAg6L+Z5Liq5ZKM5LiK6Z2i55qEbWFpbuWvueW6lAoKCiAgICAgICAgICB2YXIgY2hhcnREb20gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbGluZScpOwogICAgICAgICAgdmFyIG15Q2hhcnQgPSBlY2hhcnRzLmluaXQoY2hhcnREb20pOyAvLyDmjIflrprlm77ooajnmoTphY3nva7pobnlkozmlbDmja4KCiAgICAgICAgICB2YXIgb3B0aW9uID0gewogICAgICAgICAgICB0aXRsZTogewogICAgICAgICAgICAgIHRleHQ6ICfmr4/ml6Xpopjnm67mlbDph4/mipjnur/lm74nCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIHRvb2x0aXA6IHsKICAgICAgICAgICAgICB0cmlnZ2VyOiAnaXRlbScsCiAgICAgICAgICAgICAgLy8gdHJpZ2dlck9uOidjbGljaycsCiAgICAgICAgICAgICAgZm9ybWF0dGVyOiBmdW5jdGlvbiBmb3JtYXR0ZXIoYXJnKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gYXJnLm5hbWUgKyAi5Y+35LiK5Lyg6aKY55uu5pWw6YePIiArICI6IiArIGFyZy5kYXRhOwogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSwKICAgICAgICAgICAgeEF4aXM6IHsKICAgICAgICAgICAgICBuYW1lOiAn5pelJywKICAgICAgICAgICAgICB0eXBlOiAnY2F0ZWdvcnknLAogICAgICAgICAgICAgIGRhdGE6IHgKICAgICAgICAgICAgfSwKICAgICAgICAgICAgeUF4aXM6IHsKICAgICAgICAgICAgICBuYW1lOiAn6aKY55uu5pWw6YePJywKICAgICAgICAgICAgICB0eXBlOiAndmFsdWUnCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIHNlcmllczogW3sKICAgICAgICAgICAgICBkYXRhOiB5LAogICAgICAgICAgICAgIHR5cGU6ICdsaW5lJwogICAgICAgICAgICB9XQogICAgICAgICAgfTsgLy8g5L2/55So5Yia5oyH5a6a55qE6YWN572u6aG55ZKM5pWw5o2u5pi+56S65Zu+6KGo44CCCgogICAgICAgICAgbXlDaGFydC5zZXRPcHRpb24ob3B0aW9uKTsKICAgICAgICB9CiAgICAgIH0pOwogICAgfSwKICAgIGRyYXdQaWU6IGZ1bmN0aW9uIGRyYXdQaWUoKSB7CiAgICAgIHZhciBfdGhpczMgPSB0aGlzOwoKICAgICAgcmVxdWVzdC5nZXQoIi9lY2hhcnRzL3BpcGUiKS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICBpZiAocmVzLmNvZGUgPT09ICcyMDAnKSB7CiAgICAgICAgICBfdGhpczMucGlwZSA9IHJlcy5kYXRhOyAvL2NvbnNvbGUubG9nKHkpCiAgICAgICAgICAvLyDln7rkuo7lh4blpIflpb3nmoRkb23vvIzliJ3lp4vljJZlY2hhcnRz5a6e5L6LICDov5nkuKrlkozkuIrpnaLnmoRtYWlu5a+55bqUCgogICAgICAgICAgdmFyIGNoYXJ0RG9tID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3BpZScpOwogICAgICAgICAgdmFyIG15Q2hhcnQgPSBlY2hhcnRzLmluaXQoY2hhcnREb20pOyAvLyDmjIflrprlm77ooajnmoTphY3nva7pobnlkozmlbDmja4KCiAgICAgICAgICB2YXIgb3B0aW9uMSA9IHsKICAgICAgICAgICAgdGl0bGU6IHsKICAgICAgICAgICAgICB0ZXh0OiAn54+t57qn5Lq65pWw6aW85Zu+JwogICAgICAgICAgICB9LAogICAgICAgICAgICB0b29sdGlwOiB7CiAgICAgICAgICAgICAgdHJpZ2dlcjogJ2l0ZW0nCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIGxlZ2VuZDogewogICAgICAgICAgICAgIHRvcDogJzUlJywKICAgICAgICAgICAgICBsZWZ0OiAnY2VudGVyJwogICAgICAgICAgICB9LAogICAgICAgICAgICBzZXJpZXM6IFt7CiAgICAgICAgICAgICAgbmFtZTogJ+S6uuaVsCcsCiAgICAgICAgICAgICAgdHlwZTogJ3BpZScsCiAgICAgICAgICAgICAgcmFkaXVzOiBbJzQwJScsICc3MCUnXSwKICAgICAgICAgICAgICBhdm9pZExhYmVsT3ZlcmxhcDogZmFsc2UsCiAgICAgICAgICAgICAgbGFiZWw6IHsKICAgICAgICAgICAgICAgIHNob3c6IGZhbHNlLAogICAgICAgICAgICAgICAgcG9zaXRpb246ICdjZW50ZXInCiAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICBlbXBoYXNpczogewogICAgICAgICAgICAgICAgbGFiZWw6IHsKICAgICAgICAgICAgICAgICAgc2hvdzogdHJ1ZSwKICAgICAgICAgICAgICAgICAgZm9udFNpemU6IDQwLAogICAgICAgICAgICAgICAgICBmb250V2VpZ2h0OiAnYm9sZCcKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgIGxhYmVsTGluZTogewogICAgICAgICAgICAgICAgc2hvdzogZmFsc2UKICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgIGRhdGE6IF90aGlzMy5waXBlCiAgICAgICAgICAgIH1dCiAgICAgICAgICB9OyAvLyDkvb/nlKjliJrmjIflrprnmoTphY3nva7pobnlkozmlbDmja7mmL7npLrlm77ooajjgIIKCiAgICAgICAgICBteUNoYXJ0LnNldE9wdGlvbihvcHRpb24xKTsKICAgICAgICB9CiAgICAgIH0pOwogICAgfQogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIHRoaXMuZHJhd0xpbmUoKTsKICAgIHRoaXMuZHJhd1BpZSgpOwogIH0KfTs="},{"version":3,"sources":["Dashbord.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div>\r\n    <el-row :gutter=\"10\" style=\"margin-bottom: 60px\">\r\n      <el-col :span=\"6\">\r\n        <el-card style=\"color: #409EFF\">\r\n          <div><i class=\"el-icon-user-solid\" /> 用户总数</div>\r\n          <div style=\"padding: 10px 0; text-align: center; font-weight: bold\">\r\n            {{countList[\"用户总数\"]}}\r\n          </div>\r\n        </el-card>\r\n      </el-col>\r\n      <el-col :span=\"6\">\r\n        <el-card style=\"color: #F56C6C\">\r\n          <div><i class=\"el-icon-money\" /> 试卷总量</div>\r\n          <div style=\"padding: 10px 0; text-align: center; font-weight: bold\">\r\n              {{countList[\"试卷总量\"]}}\r\n          </div>\r\n        </el-card>\r\n      </el-col>\r\n      <el-col :span=\"6\">\r\n        <el-card style=\"color: #67C23A\">\r\n          <div><i class=\"el-icon-bank-card\" /> 题库数量</div>\r\n          <div style=\"padding: 10px 0; text-align: center; font-weight: bold\">\r\n              {{countList[\"题库数量\"]}}\r\n          </div>\r\n        </el-card>\r\n      </el-col>\r\n      <el-col :span=\"6\">\r\n        <el-card style=\"color: #E6A23C\">\r\n          <div><i class=\"el-icon-s-shop\" /> 班级总数</div>\r\n          <div style=\"padding: 10px 0; text-align: center; font-weight: bold\">\r\n              {{countList[\"班级总数\"]}}\r\n          </div>\r\n        </el-card>\r\n      </el-col>\r\n    </el-row>\r\n\r\n\r\n<!--    <el-row>-->\r\n<!--      <el-col :span=\"12\">-->\r\n<!--        <div id=\"line\" style=\"width: 500px; height: 450px\"></div>-->\r\n<!--      </el-col>-->\r\n<!--      <el-col :span=\"12\">-->\r\n<!--        <div id=\"pie\" style=\"width: 500px; height: 400px\"></div>-->\r\n<!--      </el-col>-->\r\n<!--    </el-row>-->\r\n<!--      <div id=\"line\" style=\"width: 1200px;height:400px;\"></div>-->\r\n      <div class=\"container\">\r\n          <el-row>\r\n              <el-col :span=\"8\">\r\n                  <div id=\"line\" style=\"width: 900px;height:400px;\" class=\"item\"></div>\r\n              </el-col>\r\n              <el-col :span=\"8\">\r\n                  <div style=\"width: 1000px;height:400px;\"></div>\r\n              </el-col>\r\n              <el-col :span=\"8\">\r\n                  <div id=\"pie\" style=\"width: 400px; height: 400px\" class=\"item\"></div>\r\n              </el-col>\r\n          </el-row>\r\n      </div>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport * as echarts from 'echarts'\r\nimport request from \"@/utils/request\";\r\n\r\nexport default {\r\n    name: \"Home\",\r\n    data() {\r\n        return {\r\n            countList: [],\r\n            line: [],\r\n            pipe: [],\r\n\r\n\r\n        }\r\n    },\r\n    created() {\r\n        this.load()\r\n    },\r\n    methods: {\r\n        load() {\r\n            request.get(\"/echarts/count\").then(res => {\r\n                if (res.code == 200) {\r\n                    this.countList = res.data\r\n                    //  console.log(res.data[\"题库数量\"])\r\n                }\r\n            })\r\n        },\r\n        drawLine() {\r\n            request.get(\"/echarts/line\").then(res => {\r\n                if (res.code === '200') {\r\n                    this.line = JSON.parse(JSON.stringify(res.data))\r\n                    const x = []\r\n                    this.line.x.forEach(v => {\r\n                        x.push(v)\r\n                    })\r\n                   // console.log(x)\r\n                    const y = []\r\n                    this.line.y.forEach(v => {\r\n                        y.push(v)\r\n                    })\r\n                    //console.log(y)\r\n                    // 基于准备好的dom，初始化echarts实例  这个和上面的main对应\r\n                    var chartDom = document.getElementById('line');\r\n                    var myChart = echarts.init(chartDom);\r\n                    // 指定图表的配置项和数据\r\n                    let option = {\r\n                        title:{\r\n                            text:'每日题目数量折线图'\r\n                        },\r\n                        tooltip:{\r\n                             trigger:'item',\r\n                            // triggerOn:'click',\r\n                             formatter: (arg)=>{\r\n                                 return arg.name+\"号上传题目数量\" +\":\"+arg.data\r\n                             }\r\n                        },\r\n                        xAxis: {\r\n                            name:'日',\r\n                            type: 'category',\r\n                            data: x\r\n                        },\r\n                        yAxis: {\r\n                            name:'题目数量',\r\n                            type: 'value'\r\n                        },\r\n                        series: [\r\n                            {\r\n                                data: y,\r\n                                type: 'line'\r\n                            }\r\n                        ]\r\n                    };\r\n                    // 使用刚指定的配置项和数据显示图表。\r\n                    myChart.setOption(option);\r\n                }\r\n            })\r\n        },\r\n        drawPie() {\r\n            request.get(\"/echarts/pipe\").then(res => {\r\n                if (res.code === '200') {\r\n                    this.pipe = res.data\r\n\r\n                    //console.log(y)\r\n                    // 基于准备好的dom，初始化echarts实例  这个和上面的main对应\r\n                    var chartDom = document.getElementById('pie');\r\n                    var myChart = echarts.init(chartDom);\r\n                    // 指定图表的配置项和数据\r\n                    let option1 = {\r\n                        title: {\r\n                            text: '班级人数饼图'\r\n                        },\r\n                        tooltip: {\r\n                            trigger: 'item'\r\n                        },\r\n                        legend: {\r\n                            top: '5%',\r\n                            left: 'center'\r\n                        },\r\n                        series: [\r\n                            {\r\n                                name: '人数',\r\n                                type: 'pie',\r\n                                radius: ['40%', '70%'],\r\n                                avoidLabelOverlap: false,\r\n                                label: {\r\n                                    show: false,\r\n                                    position: 'center'\r\n                                },\r\n                                emphasis: {\r\n                                    label: {\r\n                                        show: true,\r\n                                        fontSize: 40,\r\n                                        fontWeight: 'bold'\r\n                                    }\r\n                                },\r\n                                labelLine: {\r\n                                    show: false\r\n                                },\r\n                                data: this.pipe\r\n                            }\r\n                        ]\r\n                    };\r\n                    // 使用刚指定的配置项和数据显示图表。\r\n                    myChart.setOption(option1);\r\n                }\r\n            })\r\n        }\r\n\r\n    },\r\n\r\n    mounted() {\r\n       this.drawLine()\r\n        this.drawPie()\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.container {\r\n    display: flex;\r\n    justify-content: space-between;\r\n}\r\n\r\n.item {\r\n    width: 50%;\r\n    margin-right: 20px;\r\n}\r\n</style>\r\n"],"sourceRoot":"src/views"}]}