{"remainingRequest":"D:\\daima\\java\\springboot\\vue\\node_modules\\babel-loader\\lib\\index.js!D:\\daima\\java\\springboot\\vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!D:\\daima\\java\\springboot\\vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\daima\\java\\springboot\\vue\\src\\views\\Dashbord.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\daima\\java\\springboot\\vue\\src\\views\\Dashbord.vue","mtime":1681391143388},{"path":"D:\\daima\\java\\springboot\\vue\\babel.config.js","mtime":1642682271570},{"path":"D:\\daima\\java\\springboot\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1670775870315},{"path":"D:\\daima\\java\\springboot\\vue\\node_modules\\babel-loader\\lib\\index.js","mtime":1670775870320},{"path":"D:\\daima\\java\\springboot\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1670775870315},{"path":"D:\\daima\\java\\springboot\\vue\\node_modules\\vue-loader\\lib\\index.js","mtime":1670775868363}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuanNvbi5zdHJpbmdpZnkuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5mb3ItZWFjaC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmZ1bmN0aW9uLm5hbWUuanMiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgKiBhcyBlY2hhcnRzIGZyb20gJ2VjaGFydHMnOwppbXBvcnQgcmVxdWVzdCBmcm9tICJAL3V0aWxzL3JlcXVlc3QiOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogIkhvbWUiLAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBjb3VudExpc3Q6IFtdLAogICAgICBsaW5lOiBbXQogICAgfTsKICB9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICB0aGlzLmxvYWQoKTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGxvYWQ6IGZ1bmN0aW9uIGxvYWQoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICByZXF1ZXN0LmdldCgiL2VjaGFydHMvY291bnQiKS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICBpZiAocmVzLmNvZGUgPT0gMjAwKSB7CiAgICAgICAgICBfdGhpcy5jb3VudExpc3QgPSByZXMuZGF0YTsgLy8gIGNvbnNvbGUubG9nKHJlcy5kYXRhWyLpopjlupPmlbDph48iXSkKICAgICAgICB9CiAgICAgIH0pOwogICAgfSwKICAgIGRyYXdMaW5lOiBmdW5jdGlvbiBkcmF3TGluZSgpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICByZXF1ZXN0LmdldCgiL2VjaGFydHMvbGluZSIpLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgIGlmIChyZXMuY29kZSA9PT0gJzIwMCcpIHsKICAgICAgICAgIF90aGlzMi5saW5lID0gSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeShyZXMuZGF0YSkpOwogICAgICAgICAgdmFyIHggPSBbXTsKCiAgICAgICAgICBfdGhpczIubGluZS54LmZvckVhY2goZnVuY3Rpb24gKHYpIHsKICAgICAgICAgICAgeC5wdXNoKHYpOwogICAgICAgICAgfSk7IC8vIGNvbnNvbGUubG9nKHgpCgoKICAgICAgICAgIHZhciB5ID0gW107CgogICAgICAgICAgX3RoaXMyLmxpbmUueS5mb3JFYWNoKGZ1bmN0aW9uICh2KSB7CiAgICAgICAgICAgIHkucHVzaCh2KTsKICAgICAgICAgIH0pOyAvL2NvbnNvbGUubG9nKHkpCiAgICAgICAgICAvLyDln7rkuo7lh4blpIflpb3nmoRkb23vvIzliJ3lp4vljJZlY2hhcnRz5a6e5L6LICDov5nkuKrlkozkuIrpnaLnmoRtYWlu5a+55bqUCgoKICAgICAgICAgIHZhciBjaGFydERvbSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdsaW5lJyk7CiAgICAgICAgICB2YXIgbXlDaGFydCA9IGVjaGFydHMuaW5pdChjaGFydERvbSk7IC8vIOaMh+WumuWbvuihqOeahOmFjee9rumhueWSjOaVsOaNrgoKICAgICAgICAgIHZhciBvcHRpb24gPSB7CiAgICAgICAgICAgIHRpdGxlOiB7CiAgICAgICAgICAgICAgdGV4dDogJ+avj+aXpemimOebruaVsOmHj+aKmOe6v+WbvicKICAgICAgICAgICAgfSwKICAgICAgICAgICAgdG9vbHRpcDogewogICAgICAgICAgICAgIHRyaWdnZXI6ICdpdGVtJywKICAgICAgICAgICAgICAvLyB0cmlnZ2VyT246J2NsaWNrJywKICAgICAgICAgICAgICBmb3JtYXR0ZXI6IGZ1bmN0aW9uIGZvcm1hdHRlcihhcmcpIHsKICAgICAgICAgICAgICAgIHJldHVybiBhcmcubmFtZSArICLlj7fkuIrkvKDpopjnm67mlbDph48iICsgIjoiICsgYXJnLmRhdGE7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9LAogICAgICAgICAgICB4QXhpczogewogICAgICAgICAgICAgIG5hbWU6ICfml6UnLAogICAgICAgICAgICAgIHR5cGU6ICdjYXRlZ29yeScsCiAgICAgICAgICAgICAgZGF0YTogeAogICAgICAgICAgICB9LAogICAgICAgICAgICB5QXhpczogewogICAgICAgICAgICAgIG5hbWU6ICfpopjnm67mlbDph48nLAogICAgICAgICAgICAgIHR5cGU6ICd2YWx1ZScKICAgICAgICAgICAgfSwKICAgICAgICAgICAgc2VyaWVzOiBbewogICAgICAgICAgICAgIGRhdGE6IHksCiAgICAgICAgICAgICAgdHlwZTogJ2xpbmUnCiAgICAgICAgICAgIH1dCiAgICAgICAgICB9OyAvLyDkvb/nlKjliJrmjIflrprnmoTphY3nva7pobnlkozmlbDmja7mmL7npLrlm77ooajjgIIKCiAgICAgICAgICBteUNoYXJ0LnNldE9wdGlvbihvcHRpb24pOwogICAgICAgIH0KICAgICAgfSk7CiAgICB9CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdGhpcy5kcmF3TGluZSgpOwogIH0KfTs="},{"version":3,"sources":["Dashbord.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqDA,OAAA,KAAA,OAAA,MAAA,SAAA;AACA,OAAA,OAAA,MAAA,iBAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,MADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,SAAA,EAAA,EADA;AAEA,MAAA,IAAA,EAAA;AAFA,KAAA;AAKA,GARA;AASA,EAAA,OATA,qBASA;AACA,SAAA,IAAA;AACA,GAXA;AAYA,EAAA,OAAA,EAAA;AACA,IAAA,IADA,kBACA;AAAA;;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,gBAAA,EAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,YAAA,GAAA,CAAA,IAAA,IAAA,GAAA,EAAA;AACA,UAAA,KAAA,CAAA,SAAA,GAAA,GAAA,CAAA,IAAA,CADA,CAEA;AACA;AACA,OALA;AAMA,KARA;AASA,IAAA,QATA,sBASA;AAAA;;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,eAAA,EAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,YAAA,GAAA,CAAA,IAAA,KAAA,KAAA,EAAA;AACA,UAAA,MAAA,CAAA,IAAA,GAAA,IAAA,CAAA,KAAA,CAAA,IAAA,CAAA,SAAA,CAAA,GAAA,CAAA,IAAA,CAAA,CAAA;AACA,cAAA,CAAA,GAAA,EAAA;;AACA,UAAA,MAAA,CAAA,IAAA,CAAA,CAAA,CAAA,OAAA,CAAA,UAAA,CAAA,EAAA;AACA,YAAA,CAAA,CAAA,IAAA,CAAA,CAAA;AACA,WAFA,EAHA,CAMA;;;AACA,cAAA,CAAA,GAAA,EAAA;;AACA,UAAA,MAAA,CAAA,IAAA,CAAA,CAAA,CAAA,OAAA,CAAA,UAAA,CAAA,EAAA;AACA,YAAA,CAAA,CAAA,IAAA,CAAA,CAAA;AACA,WAFA,EARA,CAWA;AACA;;;AACA,cAAA,QAAA,GAAA,QAAA,CAAA,cAAA,CAAA,MAAA,CAAA;AACA,cAAA,OAAA,GAAA,OAAA,CAAA,IAAA,CAAA,QAAA,CAAA,CAdA,CAeA;;AACA,cAAA,MAAA,GAAA;AACA,YAAA,KAAA,EAAA;AACA,cAAA,IAAA,EAAA;AADA,aADA;AAIA,YAAA,OAAA,EAAA;AACA,cAAA,OAAA,EAAA,MADA;AAEA;AACA,cAAA,SAAA,EAAA,mBAAA,GAAA,EAAA;AACA,uBAAA,GAAA,CAAA,IAAA,GAAA,SAAA,GAAA,GAAA,GAAA,GAAA,CAAA,IAAA;AACA;AALA,aAJA;AAWA,YAAA,KAAA,EAAA;AACA,cAAA,IAAA,EAAA,GADA;AAEA,cAAA,IAAA,EAAA,UAFA;AAGA,cAAA,IAAA,EAAA;AAHA,aAXA;AAgBA,YAAA,KAAA,EAAA;AACA,cAAA,IAAA,EAAA,MADA;AAEA,cAAA,IAAA,EAAA;AAFA,aAhBA;AAoBA,YAAA,MAAA,EAAA,CACA;AACA,cAAA,IAAA,EAAA,CADA;AAEA,cAAA,IAAA,EAAA;AAFA,aADA;AApBA,WAAA,CAhBA,CA2CA;;AACA,UAAA,OAAA,CAAA,SAAA,CAAA,MAAA;AACA;AACA,OA/CA;AAgDA;AA1DA,GAZA;AAyEA,EAAA,OAzEA,qBAyEA;AACA,SAAA,QAAA;AACA;AA3EA,CAAA","sourcesContent":["<template>\r\n  <div>\r\n    <el-row :gutter=\"10\" style=\"margin-bottom: 60px\">\r\n      <el-col :span=\"6\">\r\n        <el-card style=\"color: #409EFF\">\r\n          <div><i class=\"el-icon-user-solid\" /> 用户总数</div>\r\n          <div style=\"padding: 10px 0; text-align: center; font-weight: bold\">\r\n            {{countList[\"用户总数\"]}}\r\n          </div>\r\n        </el-card>\r\n      </el-col>\r\n      <el-col :span=\"6\">\r\n        <el-card style=\"color: #F56C6C\">\r\n          <div><i class=\"el-icon-money\" /> 试卷总量</div>\r\n          <div style=\"padding: 10px 0; text-align: center; font-weight: bold\">\r\n              {{countList[\"试卷总量\"]}}\r\n          </div>\r\n        </el-card>\r\n      </el-col>\r\n      <el-col :span=\"6\">\r\n        <el-card style=\"color: #67C23A\">\r\n          <div><i class=\"el-icon-bank-card\" /> 题库数量</div>\r\n          <div style=\"padding: 10px 0; text-align: center; font-weight: bold\">\r\n              {{countList[\"题库数量\"]}}\r\n          </div>\r\n        </el-card>\r\n      </el-col>\r\n      <el-col :span=\"6\">\r\n        <el-card style=\"color: #E6A23C\">\r\n          <div><i class=\"el-icon-s-shop\" /> 班级总数</div>\r\n          <div style=\"padding: 10px 0; text-align: center; font-weight: bold\">\r\n              {{countList[\"班级总数\"]}}\r\n          </div>\r\n        </el-card>\r\n      </el-col>\r\n    </el-row>\r\n\r\n\r\n<!--    <el-row>-->\r\n<!--      <el-col :span=\"12\">-->\r\n<!--        <div id=\"line\" style=\"width: 500px; height: 450px\"></div>-->\r\n<!--      </el-col>-->\r\n<!--      <el-col :span=\"12\">-->\r\n<!--        <div id=\"pie\" style=\"width: 500px; height: 400px\"></div>-->\r\n<!--      </el-col>-->\r\n<!--    </el-row>-->\r\n      <div id=\"line\" style=\"width: 1200px;height:400px;\"></div>\r\n\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport * as echarts from 'echarts'\r\nimport request from \"@/utils/request\";\r\n\r\nexport default {\r\n    name: \"Home\",\r\n    data() {\r\n        return {\r\n            countList: [],\r\n            line: [],\r\n\r\n        }\r\n    },\r\n    created() {\r\n        this.load()\r\n    },\r\n    methods: {\r\n        load() {\r\n            request.get(\"/echarts/count\").then(res => {\r\n                if (res.code == 200) {\r\n                    this.countList = res.data\r\n                    //  console.log(res.data[\"题库数量\"])\r\n                }\r\n            })\r\n        },\r\n        drawLine() {\r\n            request.get(\"/echarts/line\").then(res => {\r\n                if (res.code === '200') {\r\n                    this.line = JSON.parse(JSON.stringify(res.data))\r\n                    const x = []\r\n                    this.line.x.forEach(v => {\r\n                        x.push(v)\r\n                    })\r\n                   // console.log(x)\r\n                    const y = []\r\n                    this.line.y.forEach(v => {\r\n                        y.push(v)\r\n                    })\r\n                    //console.log(y)\r\n                    // 基于准备好的dom，初始化echarts实例  这个和上面的main对应\r\n                    var chartDom = document.getElementById('line');\r\n                    var myChart = echarts.init(chartDom);\r\n                    // 指定图表的配置项和数据\r\n                    let option = {\r\n                        title:{\r\n                            text:'每日题目数量折线图'\r\n                        },\r\n                        tooltip:{\r\n                             trigger:'item',\r\n                            // triggerOn:'click',\r\n                             formatter: (arg)=>{\r\n                                 return arg.name+\"号上传题目数量\" +\":\"+arg.data\r\n                             }\r\n                        },\r\n                        xAxis: {\r\n                            name:'日',\r\n                            type: 'category',\r\n                            data: x\r\n                        },\r\n                        yAxis: {\r\n                            name:'题目数量',\r\n                            type: 'value'\r\n                        },\r\n                        series: [\r\n                            {\r\n                                data: y,\r\n                                type: 'line'\r\n                            }\r\n                        ]\r\n                    };\r\n                    // 使用刚指定的配置项和数据显示图表。\r\n                    myChart.setOption(option);\r\n                }\r\n            })\r\n        },\r\n    },\r\n\r\n    mounted() {\r\n       this.drawLine()\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n"],"sourceRoot":"src/views"}]}