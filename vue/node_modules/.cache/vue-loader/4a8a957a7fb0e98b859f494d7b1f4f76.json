{"remainingRequest":"D:\\daima\\java\\springboot\\vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\daima\\java\\springboot\\vue\\src\\views\\Dashbord.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\daima\\java\\springboot\\vue\\src\\views\\Dashbord.vue","mtime":1681542502247},{"path":"D:\\daima\\java\\springboot\\vue\\node_modules\\babel-loader\\lib\\index.js","mtime":1670775870320},{"path":"D:\\daima\\java\\springboot\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1670775870315},{"path":"D:\\daima\\java\\springboot\\vue\\node_modules\\vue-loader\\lib\\index.js","mtime":1670775868363}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgKiBhcyBlY2hhcnRzIGZyb20gJ2VjaGFydHMnDQppbXBvcnQgcmVxdWVzdCBmcm9tICJAL3V0aWxzL3JlcXVlc3QiOw0KDQpleHBvcnQgZGVmYXVsdCB7DQogICAgbmFtZTogIkhvbWUiLA0KICAgIGRhdGEoKSB7DQogICAgICAgIHJldHVybiB7DQogICAgICAgICAgICBjb3VudExpc3Q6IFtdLA0KICAgICAgICAgICAgbGluZTogW10sDQogICAgICAgICAgICBwaXBlOiBbXSwNCg0KDQogICAgICAgIH0NCiAgICB9LA0KICAgIGNyZWF0ZWQoKSB7DQogICAgICAgIHRoaXMubG9hZCgpDQogICAgfSwNCiAgICBtZXRob2RzOiB7DQogICAgICAgIGxvYWQoKSB7DQogICAgICAgICAgICByZXF1ZXN0LmdldCgiL2VjaGFydHMvY291bnQiKS50aGVuKHJlcyA9PiB7DQogICAgICAgICAgICAgICAgaWYgKHJlcy5jb2RlID09IDIwMCkgew0KICAgICAgICAgICAgICAgICAgICB0aGlzLmNvdW50TGlzdCA9IHJlcy5kYXRhDQogICAgICAgICAgICAgICAgICAgIC8vICBjb25zb2xlLmxvZyhyZXMuZGF0YVsi6aKY5bqT5pWw6YePIl0pDQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfSkNCiAgICAgICAgfSwNCiAgICAgICAgZHJhd0xpbmUoKSB7DQogICAgICAgICAgICByZXF1ZXN0LmdldCgiL2VjaGFydHMvbGluZSIpLnRoZW4ocmVzID0+IHsNCiAgICAgICAgICAgICAgICBpZiAocmVzLmNvZGUgPT09ICcyMDAnKSB7DQogICAgICAgICAgICAgICAgICAgIHRoaXMubGluZSA9IEpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkocmVzLmRhdGEpKQ0KICAgICAgICAgICAgICAgICAgICBjb25zdCB4ID0gW10NCiAgICAgICAgICAgICAgICAgICAgdGhpcy5saW5lLnguZm9yRWFjaCh2ID0+IHsNCiAgICAgICAgICAgICAgICAgICAgICAgIHgucHVzaCh2KQ0KICAgICAgICAgICAgICAgICAgICB9KQ0KICAgICAgICAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKHgpDQogICAgICAgICAgICAgICAgICAgIGNvbnN0IHkgPSBbXQ0KICAgICAgICAgICAgICAgICAgICB0aGlzLmxpbmUueS5mb3JFYWNoKHYgPT4gew0KICAgICAgICAgICAgICAgICAgICAgICAgeS5wdXNoKHYpDQogICAgICAgICAgICAgICAgICAgIH0pDQogICAgICAgICAgICAgICAgICAgIC8vY29uc29sZS5sb2coeSkNCiAgICAgICAgICAgICAgICAgICAgLy8g5Z+65LqO5YeG5aSH5aW955qEZG9t77yM5Yid5aeL5YyWZWNoYXJ0c+WunuS+iyAg6L+Z5Liq5ZKM5LiK6Z2i55qEbWFpbuWvueW6lA0KICAgICAgICAgICAgICAgICAgICB2YXIgY2hhcnREb20gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbGluZScpOw0KICAgICAgICAgICAgICAgICAgICB2YXIgbXlDaGFydCA9IGVjaGFydHMuaW5pdChjaGFydERvbSk7DQogICAgICAgICAgICAgICAgICAgIC8vIOaMh+WumuWbvuihqOeahOmFjee9rumhueWSjOaVsOaNrg0KICAgICAgICAgICAgICAgICAgICBsZXQgb3B0aW9uID0gew0KICAgICAgICAgICAgICAgICAgICAgICAgdGl0bGU6ew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRleHQ6J+avj+aXpemimOebruaVsOmHj+aKmOe6v+WbvicNCiAgICAgICAgICAgICAgICAgICAgICAgIH0sDQogICAgICAgICAgICAgICAgICAgICAgICB0b29sdGlwOnsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdHJpZ2dlcjonaXRlbScsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gdHJpZ2dlck9uOidjbGljaycsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvcm1hdHRlcjogKGFyZyk9PnsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBhcmcubmFtZSsi5Y+35LiK5Lyg6aKY55uu5pWw6YePIiArIjoiK2FyZy5kYXRhDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgICAgIH0sDQogICAgICAgICAgICAgICAgICAgICAgICB4QXhpczogew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6J+aXpScsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTogJ2NhdGVnb3J5JywNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhOiB4DQogICAgICAgICAgICAgICAgICAgICAgICB9LA0KICAgICAgICAgICAgICAgICAgICAgICAgeUF4aXM6IHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lOifpopjnm67mlbDph48nLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6ICd2YWx1ZScNCiAgICAgICAgICAgICAgICAgICAgICAgIH0sDQogICAgICAgICAgICAgICAgICAgICAgICBzZXJpZXM6IFsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGE6IHksDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6ICdsaW5lJw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgICAgIF0NCiAgICAgICAgICAgICAgICAgICAgfTsNCiAgICAgICAgICAgICAgICAgICAgLy8g5L2/55So5Yia5oyH5a6a55qE6YWN572u6aG55ZKM5pWw5o2u5pi+56S65Zu+6KGo44CCDQogICAgICAgICAgICAgICAgICAgIG15Q2hhcnQuc2V0T3B0aW9uKG9wdGlvbik7DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfSkNCiAgICAgICAgfSwNCiAgICAgICAgZHJhd1BpZSgpIHsNCiAgICAgICAgICAgIHJlcXVlc3QuZ2V0KCIvZWNoYXJ0cy9waXBlIikudGhlbihyZXMgPT4gew0KICAgICAgICAgICAgICAgIGlmIChyZXMuY29kZSA9PT0gJzIwMCcpIHsNCiAgICAgICAgICAgICAgICAgICAgdGhpcy5waXBlID0gcmVzLmRhdGENCg0KICAgICAgICAgICAgICAgICAgICAvL2NvbnNvbGUubG9nKHkpDQogICAgICAgICAgICAgICAgICAgIC8vIOWfuuS6juWHhuWkh+WlveeahGRvbe+8jOWIneWni+WMlmVjaGFydHPlrp7kvosgIOi/meS4quWSjOS4iumdoueahG1haW7lr7nlupQNCiAgICAgICAgICAgICAgICAgICAgdmFyIGNoYXJ0RG9tID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3BpZScpOw0KICAgICAgICAgICAgICAgICAgICB2YXIgbXlDaGFydCA9IGVjaGFydHMuaW5pdChjaGFydERvbSk7DQogICAgICAgICAgICAgICAgICAgIC8vIOaMh+WumuWbvuihqOeahOmFjee9rumhueWSjOaVsOaNrg0KICAgICAgICAgICAgICAgICAgICBsZXQgb3B0aW9uMSA9IHsNCiAgICAgICAgICAgICAgICAgICAgICAgIHRpdGxlOiB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgdGV4dDogJ+ePree6p+S6uuaVsOmlvOWbvicNCiAgICAgICAgICAgICAgICAgICAgICAgIH0sDQogICAgICAgICAgICAgICAgICAgICAgICB0b29sdGlwOiB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgdHJpZ2dlcjogJ2l0ZW0nDQogICAgICAgICAgICAgICAgICAgICAgICB9LA0KICAgICAgICAgICAgICAgICAgICAgICAgbGVnZW5kOiB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgdG9wOiAnNSUnLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxlZnQ6ICdjZW50ZXInDQogICAgICAgICAgICAgICAgICAgICAgICB9LA0KICAgICAgICAgICAgICAgICAgICAgICAgc2VyaWVzOiBbDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiAn5Lq65pWwJywNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTogJ3BpZScsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJhZGl1czogWyc0MCUnLCAnNzAlJ10sDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF2b2lkTGFiZWxPdmVybGFwOiBmYWxzZSwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGFiZWw6IHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNob3c6IGZhbHNlLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcG9zaXRpb246ICdjZW50ZXInDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVtcGhhc2lzOiB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsYWJlbDogew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNob3c6IHRydWUsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9udFNpemU6IDQwLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvbnRXZWlnaHQ6ICdib2xkJw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsYWJlbExpbmU6IHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNob3c6IGZhbHNlDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGE6IHRoaXMucGlwZQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgICAgIF0NCiAgICAgICAgICAgICAgICAgICAgfTsNCiAgICAgICAgICAgICAgICAgICAgLy8g5L2/55So5Yia5oyH5a6a55qE6YWN572u6aG55ZKM5pWw5o2u5pi+56S65Zu+6KGo44CCDQogICAgICAgICAgICAgICAgICAgIG15Q2hhcnQuc2V0T3B0aW9uKG9wdGlvbjEpOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0pDQogICAgICAgIH0NCg0KICAgIH0sDQoNCiAgICBtb3VudGVkKCkgew0KICAgICAgIHRoaXMuZHJhd0xpbmUoKQ0KICAgICAgICB0aGlzLmRyYXdQaWUoKQ0KICAgIH0NCn0NCg=="},{"version":3,"sources":["Dashbord.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA","file":"Dashbord.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <div>\r\n    <el-row :gutter=\"10\" style=\"margin-bottom: 60px\">\r\n      <el-col :span=\"6\">\r\n        <el-card style=\"color: #409EFF\">\r\n          <div><i class=\"el-icon-user-solid\" /> 用户总数</div>\r\n          <div style=\"padding: 10px 0; text-align: center; font-weight: bold\">\r\n            {{countList[\"用户总数\"]}}\r\n          </div>\r\n        </el-card>\r\n      </el-col>\r\n      <el-col :span=\"6\">\r\n        <el-card style=\"color: #F56C6C\">\r\n          <div><i class=\"el-icon-money\" /> 试卷总量</div>\r\n          <div style=\"padding: 10px 0; text-align: center; font-weight: bold\">\r\n              {{countList[\"试卷总量\"]}}\r\n          </div>\r\n        </el-card>\r\n      </el-col>\r\n      <el-col :span=\"6\">\r\n        <el-card style=\"color: #67C23A\">\r\n          <div><i class=\"el-icon-bank-card\" /> 题库数量</div>\r\n          <div style=\"padding: 10px 0; text-align: center; font-weight: bold\">\r\n              {{countList[\"题库数量\"]}}\r\n          </div>\r\n        </el-card>\r\n      </el-col>\r\n      <el-col :span=\"6\">\r\n        <el-card style=\"color: #E6A23C\">\r\n          <div><i class=\"el-icon-s-shop\" /> 班级总数</div>\r\n          <div style=\"padding: 10px 0; text-align: center; font-weight: bold\">\r\n              {{countList[\"班级总数\"]}}\r\n          </div>\r\n        </el-card>\r\n      </el-col>\r\n    </el-row>\r\n\r\n\r\n<!--    <el-row>-->\r\n<!--      <el-col :span=\"12\">-->\r\n<!--        <div id=\"line\" style=\"width: 500px; height: 450px\"></div>-->\r\n<!--      </el-col>-->\r\n<!--      <el-col :span=\"12\">-->\r\n<!--        <div id=\"pie\" style=\"width: 500px; height: 400px\"></div>-->\r\n<!--      </el-col>-->\r\n<!--    </el-row>-->\r\n<!--      <div id=\"line\" style=\"width: 1200px;height:400px;\"></div>-->\r\n      <div class=\"container\">\r\n          <el-row>\r\n              <el-col :span=\"8\">\r\n                  <div id=\"line\" style=\"width: 900px;height:400px;\" class=\"item\"></div>\r\n              </el-col>\r\n              <el-col :span=\"8\">\r\n                  <div style=\"width: 1000px;height:400px;\"></div>\r\n              </el-col>\r\n              <el-col :span=\"8\">\r\n                  <div id=\"pie\" style=\"width: 400px; height: 400px\" class=\"item\"></div>\r\n              </el-col>\r\n          </el-row>\r\n      </div>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport * as echarts from 'echarts'\r\nimport request from \"@/utils/request\";\r\n\r\nexport default {\r\n    name: \"Home\",\r\n    data() {\r\n        return {\r\n            countList: [],\r\n            line: [],\r\n            pipe: [],\r\n\r\n\r\n        }\r\n    },\r\n    created() {\r\n        this.load()\r\n    },\r\n    methods: {\r\n        load() {\r\n            request.get(\"/echarts/count\").then(res => {\r\n                if (res.code == 200) {\r\n                    this.countList = res.data\r\n                    //  console.log(res.data[\"题库数量\"])\r\n                }\r\n            })\r\n        },\r\n        drawLine() {\r\n            request.get(\"/echarts/line\").then(res => {\r\n                if (res.code === '200') {\r\n                    this.line = JSON.parse(JSON.stringify(res.data))\r\n                    const x = []\r\n                    this.line.x.forEach(v => {\r\n                        x.push(v)\r\n                    })\r\n                   // console.log(x)\r\n                    const y = []\r\n                    this.line.y.forEach(v => {\r\n                        y.push(v)\r\n                    })\r\n                    //console.log(y)\r\n                    // 基于准备好的dom，初始化echarts实例  这个和上面的main对应\r\n                    var chartDom = document.getElementById('line');\r\n                    var myChart = echarts.init(chartDom);\r\n                    // 指定图表的配置项和数据\r\n                    let option = {\r\n                        title:{\r\n                            text:'每日题目数量折线图'\r\n                        },\r\n                        tooltip:{\r\n                             trigger:'item',\r\n                            // triggerOn:'click',\r\n                             formatter: (arg)=>{\r\n                                 return arg.name+\"号上传题目数量\" +\":\"+arg.data\r\n                             }\r\n                        },\r\n                        xAxis: {\r\n                            name:'日',\r\n                            type: 'category',\r\n                            data: x\r\n                        },\r\n                        yAxis: {\r\n                            name:'题目数量',\r\n                            type: 'value'\r\n                        },\r\n                        series: [\r\n                            {\r\n                                data: y,\r\n                                type: 'line'\r\n                            }\r\n                        ]\r\n                    };\r\n                    // 使用刚指定的配置项和数据显示图表。\r\n                    myChart.setOption(option);\r\n                }\r\n            })\r\n        },\r\n        drawPie() {\r\n            request.get(\"/echarts/pipe\").then(res => {\r\n                if (res.code === '200') {\r\n                    this.pipe = res.data\r\n\r\n                    //console.log(y)\r\n                    // 基于准备好的dom，初始化echarts实例  这个和上面的main对应\r\n                    var chartDom = document.getElementById('pie');\r\n                    var myChart = echarts.init(chartDom);\r\n                    // 指定图表的配置项和数据\r\n                    let option1 = {\r\n                        title: {\r\n                            text: '班级人数饼图'\r\n                        },\r\n                        tooltip: {\r\n                            trigger: 'item'\r\n                        },\r\n                        legend: {\r\n                            top: '5%',\r\n                            left: 'center'\r\n                        },\r\n                        series: [\r\n                            {\r\n                                name: '人数',\r\n                                type: 'pie',\r\n                                radius: ['40%', '70%'],\r\n                                avoidLabelOverlap: false,\r\n                                label: {\r\n                                    show: false,\r\n                                    position: 'center'\r\n                                },\r\n                                emphasis: {\r\n                                    label: {\r\n                                        show: true,\r\n                                        fontSize: 40,\r\n                                        fontWeight: 'bold'\r\n                                    }\r\n                                },\r\n                                labelLine: {\r\n                                    show: false\r\n                                },\r\n                                data: this.pipe\r\n                            }\r\n                        ]\r\n                    };\r\n                    // 使用刚指定的配置项和数据显示图表。\r\n                    myChart.setOption(option1);\r\n                }\r\n            })\r\n        }\r\n\r\n    },\r\n\r\n    mounted() {\r\n       this.drawLine()\r\n        this.drawPie()\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.container {\r\n    display: flex;\r\n    justify-content: space-between;\r\n}\r\n\r\n.item {\r\n    width: 50%;\r\n    margin-right: 20px;\r\n}\r\n</style>\r\n"]}]}