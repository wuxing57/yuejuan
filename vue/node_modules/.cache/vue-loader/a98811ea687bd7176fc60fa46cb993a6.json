{"remainingRequest":"D:\\daima\\java\\springboot\\vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\daima\\java\\springboot\\vue\\src\\views\\Dashbord.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\daima\\java\\springboot\\vue\\src\\views\\Dashbord.vue","mtime":1681390268779},{"path":"D:\\daima\\java\\springboot\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1670775870315},{"path":"D:\\daima\\java\\springboot\\vue\\node_modules\\babel-loader\\lib\\index.js","mtime":1670775870320},{"path":"D:\\daima\\java\\springboot\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1670775870315},{"path":"D:\\daima\\java\\springboot\\vue\\node_modules\\vue-loader\\lib\\index.js","mtime":1670775868363}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgKiBhcyBlY2hhcnRzIGZyb20gJ2VjaGFydHMnDQppbXBvcnQgcmVxdWVzdCBmcm9tICJAL3V0aWxzL3JlcXVlc3QiOw0KDQpleHBvcnQgZGVmYXVsdCB7DQogICAgbmFtZTogIkhvbWUiLA0KICAgIGRhdGEoKSB7DQogICAgICAgIHJldHVybiB7DQogICAgICAgICAgICBjb3VudExpc3Q6IFtdLA0KICAgICAgICAgICAgbGluZTogW10sDQoNCiAgICAgICAgfQ0KICAgIH0sDQogICAgY3JlYXRlZCgpIHsNCiAgICAgICAgdGhpcy5sb2FkKCkNCiAgICB9LA0KICAgIG1ldGhvZHM6IHsNCiAgICAgICAgbG9hZCgpIHsNCiAgICAgICAgICAgIHJlcXVlc3QuZ2V0KCIvZWNoYXJ0cy9jb3VudCIpLnRoZW4ocmVzID0+IHsNCiAgICAgICAgICAgICAgICBpZiAocmVzLmNvZGUgPT0gMjAwKSB7DQogICAgICAgICAgICAgICAgICAgIHRoaXMuY291bnRMaXN0ID0gcmVzLmRhdGENCiAgICAgICAgICAgICAgICAgICAgLy8gIGNvbnNvbGUubG9nKHJlcy5kYXRhWyLpopjlupPmlbDph48iXSkNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9KQ0KICAgICAgICB9LA0KICAgICAgICBkcmF3TGluZSgpIHsNCiAgICAgICAgICAgIHJlcXVlc3QuZ2V0KCIvZWNoYXJ0cy9saW5lIikudGhlbihyZXMgPT4gew0KICAgICAgICAgICAgICAgIGlmIChyZXMuY29kZSA9PT0gJzIwMCcpIHsNCiAgICAgICAgICAgICAgICAgICAgdGhpcy5saW5lID0gSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeShyZXMuZGF0YSkpDQogICAgICAgICAgICAgICAgICAgIGNvbnN0IHggPSBbXQ0KICAgICAgICAgICAgICAgICAgICB0aGlzLmxpbmUueC5mb3JFYWNoKHYgPT4gew0KICAgICAgICAgICAgICAgICAgICAgICAgeC5wdXNoKHYpDQogICAgICAgICAgICAgICAgICAgIH0pDQogICAgICAgICAgICAgICAgICAgLy8gY29uc29sZS5sb2coeCkNCiAgICAgICAgICAgICAgICAgICAgY29uc3QgeSA9IFtdDQogICAgICAgICAgICAgICAgICAgIHRoaXMubGluZS55LmZvckVhY2godiA9PiB7DQogICAgICAgICAgICAgICAgICAgICAgICB5LnB1c2godikNCiAgICAgICAgICAgICAgICAgICAgfSkNCiAgICAgICAgICAgICAgICAgICAgLy9jb25zb2xlLmxvZyh5KQ0KICAgICAgICAgICAgICAgICAgICAvLyDln7rkuo7lh4blpIflpb3nmoRkb23vvIzliJ3lp4vljJZlY2hhcnRz5a6e5L6LICDov5nkuKrlkozkuIrpnaLnmoRtYWlu5a+55bqUDQogICAgICAgICAgICAgICAgICAgIHZhciBjaGFydERvbSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdsaW5lJyk7DQogICAgICAgICAgICAgICAgICAgIHZhciBteUNoYXJ0ID0gZWNoYXJ0cy5pbml0KGNoYXJ0RG9tKTsNCiAgICAgICAgICAgICAgICAgICAgLy8g5oyH5a6a5Zu+6KGo55qE6YWN572u6aG55ZKM5pWw5o2uDQogICAgICAgICAgICAgICAgICAgIGxldCBvcHRpb24gPSB7DQogICAgICAgICAgICAgICAgICAgICAgICB0aXRsZTp7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgdGV4dDon5q+P5pel6aKY55uu5pWw6YeP5oqY57q/5Zu+Jw0KICAgICAgICAgICAgICAgICAgICAgICAgfSwNCiAgICAgICAgICAgICAgICAgICAgICAgIHRvb2x0aXA6ew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0cmlnZ2VyOidpdGVtJywNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2hvdzogdHJ1ZSwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9ybWF0dGVyOiAocGFyYW1zKSA9PiB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiAn6aKY55uu5pWw6YePOicrcGFyYW1zWzBdLm5hbWU7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhOiB5LA0KICAgICAgICAgICAgICAgICAgICAgICAgfSwNCiAgICAgICAgICAgICAgICAgICAgICAgIHhBeGlzOiB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTon5pelJywNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiAnY2F0ZWdvcnknLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGE6IHgNCiAgICAgICAgICAgICAgICAgICAgICAgIH0sDQogICAgICAgICAgICAgICAgICAgICAgICB5QXhpczogew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6J+mimOebruaVsOmHjycsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTogJ3ZhbHVlJw0KICAgICAgICAgICAgICAgICAgICAgICAgfSwNCiAgICAgICAgICAgICAgICAgICAgICAgIHNlcmllczogWw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YTogeSwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTogJ2xpbmUnDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICAgICAgXQ0KICAgICAgICAgICAgICAgICAgICB9Ow0KICAgICAgICAgICAgICAgICAgICAvLyDkvb/nlKjliJrmjIflrprnmoTphY3nva7pobnlkozmlbDmja7mmL7npLrlm77ooajjgIINCiAgICAgICAgICAgICAgICAgICAgbXlDaGFydC5zZXRPcHRpb24ob3B0aW9uKTsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9KQ0KICAgICAgICB9LA0KICAgIH0sDQoNCiAgICBtb3VudGVkKCkgew0KICAgICAgIHRoaXMuZHJhd0xpbmUoKQ0KICAgIH0NCn0NCg=="},{"version":3,"sources":["Dashbord.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqDA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"Dashbord.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <div>\r\n    <el-row :gutter=\"10\" style=\"margin-bottom: 60px\">\r\n      <el-col :span=\"6\">\r\n        <el-card style=\"color: #409EFF\">\r\n          <div><i class=\"el-icon-user-solid\" /> 用户总数</div>\r\n          <div style=\"padding: 10px 0; text-align: center; font-weight: bold\">\r\n            {{countList[\"用户总数\"]}}\r\n          </div>\r\n        </el-card>\r\n      </el-col>\r\n      <el-col :span=\"6\">\r\n        <el-card style=\"color: #F56C6C\">\r\n          <div><i class=\"el-icon-money\" /> 试卷总量</div>\r\n          <div style=\"padding: 10px 0; text-align: center; font-weight: bold\">\r\n              {{countList[\"试卷总量\"]}}\r\n          </div>\r\n        </el-card>\r\n      </el-col>\r\n      <el-col :span=\"6\">\r\n        <el-card style=\"color: #67C23A\">\r\n          <div><i class=\"el-icon-bank-card\" /> 题库数量</div>\r\n          <div style=\"padding: 10px 0; text-align: center; font-weight: bold\">\r\n              {{countList[\"题库数量\"]}}\r\n          </div>\r\n        </el-card>\r\n      </el-col>\r\n      <el-col :span=\"6\">\r\n        <el-card style=\"color: #E6A23C\">\r\n          <div><i class=\"el-icon-s-shop\" /> 班级总数</div>\r\n          <div style=\"padding: 10px 0; text-align: center; font-weight: bold\">\r\n              {{countList[\"班级总数\"]}}\r\n          </div>\r\n        </el-card>\r\n      </el-col>\r\n    </el-row>\r\n\r\n\r\n<!--    <el-row>-->\r\n<!--      <el-col :span=\"12\">-->\r\n<!--        <div id=\"line\" style=\"width: 500px; height: 450px\"></div>-->\r\n<!--      </el-col>-->\r\n<!--      <el-col :span=\"12\">-->\r\n<!--        <div id=\"pie\" style=\"width: 500px; height: 400px\"></div>-->\r\n<!--      </el-col>-->\r\n<!--    </el-row>-->\r\n      <div id=\"line\" style=\"width: 1200px;height:400px;\"></div>\r\n\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport * as echarts from 'echarts'\r\nimport request from \"@/utils/request\";\r\n\r\nexport default {\r\n    name: \"Home\",\r\n    data() {\r\n        return {\r\n            countList: [],\r\n            line: [],\r\n\r\n        }\r\n    },\r\n    created() {\r\n        this.load()\r\n    },\r\n    methods: {\r\n        load() {\r\n            request.get(\"/echarts/count\").then(res => {\r\n                if (res.code == 200) {\r\n                    this.countList = res.data\r\n                    //  console.log(res.data[\"题库数量\"])\r\n                }\r\n            })\r\n        },\r\n        drawLine() {\r\n            request.get(\"/echarts/line\").then(res => {\r\n                if (res.code === '200') {\r\n                    this.line = JSON.parse(JSON.stringify(res.data))\r\n                    const x = []\r\n                    this.line.x.forEach(v => {\r\n                        x.push(v)\r\n                    })\r\n                   // console.log(x)\r\n                    const y = []\r\n                    this.line.y.forEach(v => {\r\n                        y.push(v)\r\n                    })\r\n                    //console.log(y)\r\n                    // 基于准备好的dom，初始化echarts实例  这个和上面的main对应\r\n                    var chartDom = document.getElementById('line');\r\n                    var myChart = echarts.init(chartDom);\r\n                    // 指定图表的配置项和数据\r\n                    let option = {\r\n                        title:{\r\n                            text:'每日题目数量折线图'\r\n                        },\r\n                        tooltip:{\r\n                             trigger:'item',\r\n                             show: true,\r\n                             formatter: (params) => {\r\n                                return '题目数量:'+params[0].name;\r\n                            },\r\n                            data: y,\r\n                        },\r\n                        xAxis: {\r\n                            name:'日',\r\n                            type: 'category',\r\n                            data: x\r\n                        },\r\n                        yAxis: {\r\n                            name:'题目数量',\r\n                            type: 'value'\r\n                        },\r\n                        series: [\r\n                            {\r\n                                data: y,\r\n                                type: 'line'\r\n                            }\r\n                        ]\r\n                    };\r\n                    // 使用刚指定的配置项和数据显示图表。\r\n                    myChart.setOption(option);\r\n                }\r\n            })\r\n        },\r\n    },\r\n\r\n    mounted() {\r\n       this.drawLine()\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n"]}]}