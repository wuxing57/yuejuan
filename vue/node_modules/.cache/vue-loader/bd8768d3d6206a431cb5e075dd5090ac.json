{"remainingRequest":"D:\\daima\\java\\springboot\\vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\daima\\java\\springboot\\vue\\node_modules\\vue2-countdown\\lib\\vue2-countdown.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\daima\\java\\springboot\\vue\\node_modules\\vue2-countdown\\lib\\vue2-countdown.vue","mtime":1499771533000},{"path":"D:\\daima\\java\\springboot\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1670775870315},{"path":"D:\\daima\\java\\springboot\\vue\\node_modules\\babel-loader\\lib\\index.js","mtime":1670775870320},{"path":"D:\\daima\\java\\springboot\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1670775870315},{"path":"D:\\daima\\java\\springboot\\vue\\node_modules\\vue-loader\\lib\\index.js","mtime":1670775868363}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCiAgZXhwb3J0IGRlZmF1bHQgewogICAgcmVwbGFjZTogdHJ1ZSwKICAgIGRhdGEgKCkgewogICAgICByZXR1cm4gewogICAgICAgIHRpcFNob3c6IHRydWUsCiAgICAgICAgbXNUaW1lOiB7CQkJLy/lgJLorqHml7bmlbDlgLwKICAgICAgICAgIHNob3c6IGZhbHNlLAkJLy/lgJLorqHml7bnirbmgIEKICAgICAgICAgIGRheTogJycsCQkJLy/lpKkKICAgICAgICAgIGhvdXI6ICcnLAkJLy/lsI/ml7YKICAgICAgICAgIG1pbnV0ZXM6ICcnLAkJLy/liIbpkp8KICAgICAgICAgIHNlY29uZHM6ICcnCQkvL+enkgogICAgICAgIH0sCiAgICAgICAgc3RhcjogJycsCQkJLy/mtLvliqjlvIDlp4vml7bpl7QKICAgICAgICBlbmQ6ICcnLAkJCQkvL+a0u+WKqOe7k+adn+aXtumXtAogICAgICAgIGN1cnJlbnQ6ICcnLCAgICAgICAgIC8v5b2T5YmN5pe26Ze0CiAgICAgIH0KICAgIH0sCiAgICB3YXRjaDogewogICAgICBjdXJyZW50VGltZTogZnVuY3Rpb24gKHZhbCwgb2xkdmFsKSB7CiAgICAgICAgdGhpcy5nb2dvZ28oKTsKICAgICAgfQogICAgfSwKICAgIHByb3BzOiB7CiAgICAgIC8v6Led56a75byA5aeL5o+Q56S65paH5a2XCiAgICAgIHRpcFRleHQ6IHsKICAgICAgICB0eXBlOiBTdHJpbmcsCiAgICAgICAgZGVmYXVsdDogJ+i3neemu+W8gOWniycKICAgICAgfSwKICAgICAgLy/ot53nprvnu5PmnZ/mj5DnpLrmloflrZcKICAgICAgdGlwVGV4dEVuZDogewogICAgICAgIHR5cGU6IFN0cmluZywKICAgICAgICBkZWZhdWx0OiAn6Led56a757uT5p2fJwogICAgICB9LAogICAgICAvL+aXtumXtOaOp+S7tklECiAgICAgIGlkOiB7CiAgICAgICAgdHlwZTogU3RyaW5nLAogICAgICAgIGRlZmF1bHQ6ICcxJwogICAgICB9LAogICAgICAvL+W9k+WJjeaXtumXtAogICAgICBjdXJyZW50VGltZTogewogICAgICAgIHR5cGU6IE51bWJlcgogICAgICB9LAogICAgICAvLyDmtLvliqjlvIDlp4vml7bpl7QKICAgICAgc3RhcnRUaW1lOiB7CiAgICAgICAgdHlwZTogTnVtYmVyCiAgICAgIH0sCiAgICAgIC8vIOa0u+WKqOe7k+adn+aXtumXtAogICAgICBlbmRUaW1lOiB7CiAgICAgICAgdHlwZTogTnVtYmVyCiAgICAgIH0sCiAgICAgIC8vIOWAkuiuoeaXtue7k+adn+aYvuekuuaWh+acrAogICAgICBlbmRUZXh0OiB7CiAgICAgICAgdHlwZTogU3RyaW5nLAogICAgICAgIGRlZmF1bHQ6ICflt7Lnu5PmnZ8nCiAgICAgIH0sCiAgICAgIC8v6Ieq5a6a5LmJ5pi+56S65paH5a2XOuWkqQogICAgICBkYXlUeHQ6IHsKICAgICAgICB0eXBlOiBTdHJpbmcsCiAgICAgICAgZGVmYXVsdDogJzonCiAgICAgIH0sCiAgICAgIC8v6Ieq5a6a5LmJ5pi+56S65paH5a2XOuaXtgogICAgICBob3VyVHh0OiB7CiAgICAgICAgdHlwZTogU3RyaW5nLAogICAgICAgIGRlZmF1bHQ6ICc6JwogICAgICB9LAogICAgICAvL+iHquWumuS5ieaYvuekuuaWh+WtlzrliIYKICAgICAgbWludXRlc1R4dDogewogICAgICAgIHR5cGU6IFN0cmluZywKICAgICAgICBkZWZhdWx0OiAnOicKICAgICAgfSwKICAgICAgc2Vjb25kc1R4dDogewogICAgICAgIHR5cGU6IFN0cmluZywKICAgICAgICBkZWZhdWx0OiAnOicKICAgICAgfSwKICAgICAgLy/mmK/lkKblvIDlkK/np5LooajlgJLorqHvvIzmnKrlrozmiJAKICAgICAgc2Vjb25kc0ZpeGVkOiB7CiAgICAgICAgdHlwZTogQm9vbGVhbiwKICAgICAgICBkZWZhdWx0OiBmYWxzZQogICAgICB9LAogICAgfSwKICAgIG1vdW50ZWQgKCkgewogICAgICBjb25zb2xlLmxvZyh0aGlzKQogICAgICB0aGlzLmdvZ29nbygpOwogICAgfSwKICAgIG1ldGhvZHM6IHsKICAgICAgZ29nb2dvOiBmdW5jdGlvbiAoKSB7CiAgICAgICAgLy/liKTmlq3mmK/np5Lov5jmmK/mr6vnp5IKICAgICAgICB0aGlzLnN0YXJ0VGltZS50b1N0cmluZygpLmxlbmd0aCA9PSAxMCA/IHRoaXMuc3RhciA9IHRoaXMuc3RhcnRUaW1lICogMTAwMCA6IHRoaXMuc3RhciA9IHRoaXMuc3RhcnRUaW1lOwogICAgICAgIHRoaXMuZW5kVGltZS50b1N0cmluZygpLmxlbmd0aCA9PSAxMCA/IHRoaXMuZW5kID0gdGhpcy5lbmRUaW1lICogMTAwMCA6IHRoaXMuZW5kID0gdGhpcy5lbmRUaW1lOwogICAgICAgIGlmICh0aGlzLmN1cnJlbnRUaW1lKSB7CiAgICAgICAgICB0aGlzLmN1cnJlbnRUaW1lLnRvU3RyaW5nKCkubGVuZ3RoID09IDEwID8gdGhpcy5jdXJyZW50ID0gdGhpcy5jdXJyZW50VGltZSAqIDEwMDAgOiB0aGlzLmN1cnJlbnQgPSB0aGlzLmN1cnJlbnRUaW1lOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICB0aGlzLmN1cnJlbnQgPSAoIG5ldyBEYXRlKCkgKS5nZXRUaW1lKCk7CiAgICAgICAgfQoKICAgICAgICBpZiAodGhpcy5lbmQgPCB0aGlzLmN1cnJlbnQpIHsKICAgICAgICAgIC8qKgogICAgICAgICAgICog57uT5p2f5pe26Ze05bCP5LqO5b2T5YmN5pe26Ze0IOa0u+WKqOW3sue7k+adnwogICAgICAgICAgICovCiAgICAgICAgICB0aGlzLm1zVGltZS5zaG93ID0gZmFsc2U7CiAgICAgICAgICB0aGlzLmVuZF9tZXNzYWdlKCk7CiAgICAgICAgfQogICAgICAgIGVsc2UgaWYgKHRoaXMuY3VycmVudCA8IHRoaXMuc3RhcikgewogICAgICAgICAgLyoqCiAgICAgICAgICAgKiDlvZPliY3ml7bpl7TlsI/kuo7lvIDlp4vml7bpl7Qg5rS75Yqo5bCa5pyq5byA5aeLCiAgICAgICAgICAgKi8KICAgICAgICAgIHRoaXMuJHNldCh0aGlzLCAndGlwU2hvdycsIHRydWUpOwogICAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7CiAgICAgICAgICAgIHRoaXMucnVuVGltZSh0aGlzLnN0YXIsIHRoaXMuY3VycmVudCwgdGhpcy5zdGFydF9tZXNzYWdlKTsKICAgICAgICAgIH0sIDEpOwogICAgICAgIH0KICAgICAgICBlbHNlIGlmICh0aGlzLmVuZCA+IHRoaXMuY3VycmVudCAmJiB0aGlzLnN0YXIgPCB0aGlzLmN1cnJlbnQgfHwgdGhpcy5zdGFyID09IHRoaXMuY3VycmVudCkgewogICAgICAgICAgLyoqCiAgICAgICAgICAgKiDnu5PmnZ/ml7bpl7TlpKfkuo7lvZPliY3lubbkuJTlvIDlp4vml7bpl7TlsI/kuo7lvZPliY3ml7bpl7TvvIzmiafooYzmtLvliqjlvIDlp4vlgJLorqHml7YKICAgICAgICAgICAqLwogICAgICAgICAgdGhpcy4kc2V0KHRoaXMsICd0aXBTaG93JywgZmFsc2UpOwogICAgICAgICAgdGhpcy5tc1RpbWUuc2hvdyA9IHRydWU7CiAgICAgICAgICB0aGlzLiRlbWl0KCdzdGFydF9jYWxsYmFjaycsIHRoaXMubXNUaW1lLnNob3cpOwogICAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7CiAgICAgICAgICAgIHRoaXMucnVuVGltZSh0aGlzLmVuZCwgdGhpcy5zdGFyLCB0aGlzLmVuZF9tZXNzYWdlLCB0cnVlKQogICAgICAgICAgfSwgMSk7CiAgICAgICAgfQogICAgICB9LAogICAgICBydW5UaW1lIChzdGFydFRpbWUsIGVuZFRpbWUsIGNhbGxGdW4sIHR5cGUpIHsKICAgICAgICBsZXQgbXNUaW1lID0gdGhpcy5tc1RpbWU7CiAgICAgICAgbGV0IHRpbWVEaXN0YW5jZSA9IHN0YXJ0VGltZSAtIGVuZFRpbWU7CiAgICAgICAgaWYgKHRpbWVEaXN0YW5jZSA+IDApIHsKICAgICAgICAgIHRoaXMubXNUaW1lLnNob3cgPSB0cnVlOwogICAgICAgICAgbXNUaW1lLmRheSA9IE1hdGguZmxvb3IodGltZURpc3RhbmNlIC8gODY0MDAwMDApOwogICAgICAgICAgdGltZURpc3RhbmNlIC09IG1zVGltZS5kYXkgKiA4NjQwMDAwMDsKICAgICAgICAgIG1zVGltZS5ob3VyID0gTWF0aC5mbG9vcih0aW1lRGlzdGFuY2UgLyAzNjAwMDAwKTsKICAgICAgICAgIHRpbWVEaXN0YW5jZSAtPSBtc1RpbWUuaG91ciAqIDM2MDAwMDA7CiAgICAgICAgICBtc1RpbWUubWludXRlcyA9IE1hdGguZmxvb3IodGltZURpc3RhbmNlIC8gNjAwMDApOwogICAgICAgICAgdGltZURpc3RhbmNlIC09IG1zVGltZS5taW51dGVzICogNjAwMDA7CiAgICAgICAgICAvL+aYr+WQpuW8gOWQr+enkuihqOWAkuiuoSzmnKrlrozmiJAKLy8gICAgICAgICAgICAgICAgICAgIHRoaXMuc2Vjb25kc0ZpeGVkID8gbXNUaW1lLnNlY29uZHMgPSBuZXcgTnVtYmVyKHRpbWVEaXN0YW5jZSAvIDEwMDApLnRvRml4ZWQoMikgOiBtc1RpbWUuc2Vjb25kcyA9IE1hdGguZmxvb3IoIHRpbWVEaXN0YW5jZSAvIDEwMDAgKS50b0ZpeGVkKDApOwogICAgICAgICAgbXNUaW1lLnNlY29uZHMgPSBNYXRoLmZsb29yKHRpbWVEaXN0YW5jZSAvIDEwMDApLnRvRml4ZWQoMCk7CiAgICAgICAgICB0aW1lRGlzdGFuY2UgLT0gbXNUaW1lLnNlY29uZHMgKiAxMDAwOwoKICAgICAgICAgIGlmIChtc1RpbWUuaG91ciA8IDEwKSB7CiAgICAgICAgICAgIG1zVGltZS5ob3VyID0gIjAiICsgbXNUaW1lLmhvdXI7CiAgICAgICAgICB9CiAgICAgICAgICBpZiAobXNUaW1lLm1pbnV0ZXMgPCAxMCkgewogICAgICAgICAgICBtc1RpbWUubWludXRlcyA9ICIwIiArIG1zVGltZS5taW51dGVzOwogICAgICAgICAgfQogICAgICAgICAgaWYgKG1zVGltZS5zZWNvbmRzIDwgMTApIHsKICAgICAgICAgICAgbXNUaW1lLnNlY29uZHMgPSAiMCIgKyBtc1RpbWUuc2Vjb25kczsKICAgICAgICAgIH0KICAgICAgICAgIGxldCBfcyA9IERhdGUubm93KCk7CiAgICAgICAgICBsZXQgX2UgPSBEYXRlLm5vdygpOwogICAgICAgICAgbGV0IGRpZmZQZXJGdW5jID0gX2UgLSBfczsKICAgICAgICAgIHNldFRpbWVvdXQoKCkgPT4gewogICAgICAgICAgICBpZiAodHlwZSkgewogICAgICAgICAgICAgIHRoaXMucnVuVGltZSh0aGlzLmVuZCwgZW5kVGltZSArPSAxMDAwLCBjYWxsRnVuLCB0cnVlKTsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICB0aGlzLnJ1blRpbWUodGhpcy5zdGFyLCBlbmRUaW1lICs9IDEwMDAsIGNhbGxGdW4pOwogICAgICAgICAgICB9CiAgICAgICAgICB9LCAxMDAwIC0gZGlmZlBlckZ1bmMpCiAgICAgICAgfQogICAgICAgIGVsc2UgewogICAgICAgICAgY2FsbEZ1bigpOwogICAgICAgIH0KICAgICAgfSwKICAgICAgc3RhcnRfbWVzc2FnZSAoKSB7CiAgICAgICAgdGhpcy4kc2V0KHRoaXMsICd0aXBTaG93JywgZmFsc2UpOwogICAgICAgIHRoaXMuJGVtaXQoJ3N0YXJ0X2NhbGxiYWNrJywgdGhpcy5tc1RpbWUuc2hvdyk7CiAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7CiAgICAgICAgICB0aGlzLnJ1blRpbWUodGhpcy5lbmQsIHRoaXMuc3RhciwgdGhpcy5lbmRfbWVzc2FnZSwgdHJ1ZSkKICAgICAgICB9LCAxKTsKICAgICAgfSwKICAgICAgZW5kX21lc3NhZ2UoKXsKICAgICAgICB0aGlzLm1zVGltZS5zaG93ID0gZmFsc2U7CiAgICAgICAgaWYgKHRoaXMuY3VycmVudFRpbWUgPD0gMCkgewogICAgICAgICAgcmV0dXJuOwogICAgICAgIH0KICAgICAgICB0aGlzLiRlbWl0KCdlbmRfY2FsbGJhY2snLCB0aGlzLm1zVGltZS5zaG93KTsKICAgICAgfQogICAgfQogIH0K"},{"version":3,"sources":["vue2-countdown.vue"],"names":[],"mappings":";;;;;;;;;;;;;;AAcfile":"vue2-countdown.vue","sourceRoot":"node_modules/vue2-countdown/lib","sourcesContent":["<template>\n  <div>\n    <p v-if=\"msTime.show\">\n      <!--<span v-if=\"tipShow\">{{tipText}}:</span>-->\n      <!--<span v-if=\"!tipShow\">{{tipTextEnd}}:</span>-->\n      <span v-if=\"msTime.day>0\"><span>{{msTime.day}}</span><i>{{dayTxt}}</i></span>\n      <span>{{msTime.hour}}</span><i>{{hourTxt}}</i>\n      <span>{{msTime.minutes}}</span><i>{{minutesTxt}}</i>\n      <span>{{msTime.seconds}}</span><i>{{secondsTxt}}</i>\n    </p>\n    <!--<p v-if=\"!msTime.show\">{{endText}}</p>-->\n  </div>\n</template>\n<script>\n  export default {\n    replace: true,\n    data () {\n      return {\n        tipShow: true,\n        msTime: {\t\t\t//倒计时数值\n          show: false,\t\t//倒计时状态\n          day: '',\t\t\t//天\n          hour: '',\t\t//小时\n          minutes: '',\t\t//分钟\n          seconds: ''\t\t//秒\n        },\n        star: '',\t\t\t//活动开始时间\n        end: '',\t\t\t\t//活动结束时间\n        current: '',         //当前时间\n      }\n    },\n    watch: {\n      currentTime: function (val, oldval) {\n        this.gogogo();\n      }\n    },\n    props: {\n      //距离开始提示文字\n      tipText: {\n        type: String,\n        default: '距离开始'\n      },\n      //距离结束提示文字\n      tipTextEnd: {\n        type: String,\n        default: '距离结束'\n      },\n      //时间控件ID\n      id: {\n        type: String,\n        default: '1'\n      },\n      //当前时间\n      currentTime: {\n        type: Number\n      },\n      // 活动开始时间\n      startTime: {\n        type: Number\n      },\n      // 活动结束时间\n      endTime: {\n        type: Number\n      },\n      // 倒计时结束显示文本\n      endText: {\n        type: String,\n        default: '已结束'\n      },\n      //自定义显示文字:天\n      dayTxt: {\n        type: String,\n        default: ':'\n      },\n      //自定义显示文字:时\n      hourTxt: {\n        type: String,\n        default: ':'\n      },\n      //自定义显示文字:分\n      minutesTxt: {\n        type: String,\n        default: ':'\n      },\n      secondsTxt: {\n        type: String,\n        default: ':'\n      },\n      //是否开启秒表倒计，未完成\n      secondsFixed: {\n        type: Boolean,\n        default: false\n      },\n    },\n    mounted () {\n      console.log(this)\n      this.gogogo();\n    },\n    methods: {\n      gogogo: function () {\n        //判断是秒还是毫秒\n        this.startTime.toString().length == 10 ? this.star = this.startTime * 1000 : this.star = this.startTime;\n        this.endTime.toString().length == 10 ? this.end = this.endTime * 1000 : this.end = this.endTime;\n        if (this.currentTime) {\n          this.currentTime.toString().length == 10 ? this.current = this.currentTime * 1000 : this.current = this.currentTime;\n        } else {\n          this.current = ( new Date() ).getTime();\n        }\n\n        if (this.end < this.current) {\n          /**\n           * 结束时间小于当前时间 活动已结束\n           */\n          this.msTime.show = false;\n          this.end_message();\n        }\n        else if (this.current < this.star) {\n          /**\n           * 当前时间小于开始时间 活动尚未开始\n           */\n          this.$set(this, 'tipShow', true);\n          setTimeout(() => {\n            this.runTime(this.star, this.current, this.start_message);\n          }, 1);\n        }\n        else if (this.end > this.current && this.star < this.current || this.star == this.current) {\n          /**\n           * 结束时间大于当前并且开始时间小于当前时间，执行活动开始倒计时\n           */\n          this.$set(this, 'tipShow', false);\n          this.msTime.show = true;\n          this.$emit('start_callback', this.msTime.show);\n          setTimeout(() => {\n            this.runTime(this.end, this.star, this.end_message, true)\n          }, 1);\n        }\n      },\n      runTime (startTime, endTime, callFun, type) {\n        let msTime = this.msTime;\n        let timeDistance = startTime - endTime;\n        if (timeDistance > 0) {\n          this.msTime.show = true;\n          msTime.day = Math.floor(timeDistance / 86400000);\n          timeDistance -= msTime.day * 86400000;\n          msTime.hour = Math.floor(timeDistance / 3600000);\n          timeDistance -= msTime.hour * 3600000;\n          msTime.minutes = Math.floor(timeDistance / 60000);\n          timeDistance -= msTime.minutes * 60000;\n          //是否开启秒表倒计,未完成\n//                    this.secondsFixed ? msTime.seconds = new Number(timeDistance / 1000).toFixed(2) : msTime.seconds = Math.floor( timeDistance / 1000 ).toFixed(0);\n          msTime.seconds = Math.floor(timeDistance / 1000).toFixed(0);\n          timeDistance -= msTime.seconds * 1000;\n\n          if (msTime.hour < 10) {\n            msTime.hour = \"0\" + msTime.hour;\n          }\n          if (msTime.minutes < 10) {\n            msTime.minutes = \"0\" + msTime.minutes;\n          }\n          if (msTime.seconds < 10) {\n            msTime.seconds = \"0\" + msTime.seconds;\n          }\n          let _s = Date.now();\n          let _e = Date.now();\n          let diffPerFunc = _e - _s;\n          setTimeout(() => {\n            if (type) {\n              this.runTime(this.end, endTime += 1000, callFun, true);\n            } else {\n              this.runTime(this.star, endTime += 1000, callFun);\n            }\n          }, 1000 - diffPerFunc)\n        }\n        else {\n          callFun();\n        }\n      },\n      start_message () {\n        this.$set(this, 'tipShow', false);\n        this.$emit('start_callback', this.msTime.show);\n        setTimeout(() => {\n          this.runTime(this.end, this.star, this.end_message, true)\n        }, 1);\n      },\n      end_message(){\n        this.msTime.show = false;\n        if (this.currentTime <= 0) {\n          return;\n        }\n        this.$emit('end_callback', this.msTime.show);\n      }\n    }\n  }\n</script>\n"]}]}